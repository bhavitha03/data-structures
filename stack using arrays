#include<stdio.h>
#include<stdlib.h>
#define MAX 10
int top = -1;
int stack[MAX];
void PUSH();
void POP();
void PEEK();
int is_empty();
int is_full();
int length();
void display();
void main()
{
	int ch;
	while(1)
	{
		printf("stack operations using arrays");
		printf("\n1.Push\n2.Pop\n3.Peek\n4.length\n5.display\n6.exit");
		printf("enter your choice:");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1: PUSH();
				break;
			case 2: POP();
				break;
			case 3: PEEK();
				break;
			case 4: printf("length is :%d",length());
				break;
			case 5: display();
				break;
			case 6: exit(0);
		}
	}
}
void PUSH()
{
	int k;
	if(is_full())
	{
		printf("stack is over flow");
	}
	else
	{
		printf("enter value to be inserted");
		scanf("%d",&k);
		top++;
		stack[top] = k;
	}
}
void POP()
{
	if(is_empty())
	{
		printf("stack is empty");
	}
	else 
	{
		printf("popped:%d",stack[top]);
		top--;
	}
}
void PEEK()
{
	printf("peek value is : %d",stack[top]);
}
int length()
{
	int count = 0,i;
	if (top >= 0)
	{
		for(i=0;i<=top;i++)
		{
			count++;
		}
	}
	return count;
}
void display()
{
	int i;
	if(top>=0)
	{
		printf("\n the elements in stack ");
		for(i=0;i<=top;i++)
			printf("\n %d",stack[i]);
	}
	else 
	{
		printf("the stack is empty");
	}
}
int is_full()
{
	if(top ==MAX-1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}
int is_empty()
{
	if(top==-1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}
