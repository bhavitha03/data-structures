#include <stdbool.h>  
#include <stdio.h>  
#include <stdlib.h>  
  
typedef struct Node {  
    int key;  
    struct Node *left, *right;  
} Node;  
  
Node* newNode(int key)  
{  
    Node* temp = (Node *)malloc(sizeof(Node));  
    temp -> key = key;  
    temp -> left = temp -> right = NULL;  
    return (temp);  
}  
  
bool isMirror(Node* root1, Node* root2)  
{  
    if (root1 == NULL && root2 == NULL)  
        return true;  
   
    if (root1 && root2 && root1 -> key == root2 -> key)  
        return isMirror(root1 -> left, root2 -> right)  
            && isMirror(root1->right, root2->left);  
  
    return false;  
}  
bool isSymmetric(Node* root)  
{  
    return isMirror(root, root);  
}  
  
int main()  
{  
  
    Node* root = newNode(1);  
    root -> left = newNode(2);  
    root -> right = newNode(2);  
    root -> left -> left = newNode(3);  
    root -> left -> right = newNode(4);  
    root -> right -> left = newNode(4);  
    root -> right -> right = newNode(3);  
  
    if (isSymmetric(root))  
        printf("Symmetric");  
    else  
        printf("Not symmetric");  
    return 0;  
}  
